# -*- coding: utf-8 -*-
"""main.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I_s2EvXDmI15SqettrCPdH3nIftCw77n
"""

import os
from pydub import AudioSegment
import whisper

def extract_audio_from_videos(video_folder_path, audio_folder_path):
    """Extrae el audio de los videos en la carpeta especificada y guarda los archivos de audio."""
    os.makedirs(audio_folder_path, exist_ok=True)
    mp4_files = [f for f in os.listdir(video_folder_path) if f.endswith('.mp4')]

    for mp4_file in mp4_files:
        video_file_path = os.path.join(video_folder_path, mp4_file)
        audio = AudioSegment.from_file(video_file_path, format="mp4")
        audio_output_path = os.path.join(audio_folder_path, f"{os.path.splitext(mp4_file)[0]}.mp3")
        audio.export(audio_output_path, format="mp3")
        print(f"Audio extraído y guardado exitosamente: {audio_output_path}")

    print("Proceso de extracción de audio completado.")

def transcribe_audio_to_text(audio_folder_path, model_name="base"):
    """Transcribe los archivos de audio en la carpeta especificada y guarda las transcripciones en texto."""
    model = whisper.load_model(model_name)
    audio_files = [f for f in os.listdir(audio_folder_path) if f.endswith('.mp3')]

    for audio_file in audio_files:
        audio_file_path = os.path.join(audio_folder_path, audio_file)
        result = model.transcribe(audio_file_path, language="es")
        transcript_output_path = os.path.join(audio_folder_path, f"{os.path.splitext(audio_file)[0]}.txt")
        with open(transcript_output_path, "w") as file:
            file.write(result["text"])
        print(f"Transcripción guardada exitosamente: {transcript_output_path}")

    print("Proceso de transcripción completado.")

def main():
    video_folder_path = "/content/drive/MyDrive/Maestria/Deep Learning/01. Whisper/data/10102024/"
    audio_folder_path = "/content/drive/MyDrive/Maestria/Deep Learning/01. Whisper/data/audio/"

    #extraer audio de los videos
    extract_audio_from_videos(video_folder_path, audio_folder_path)

    #transcribir los audios extraídos
    transcribe_audio_to_text(audio_folder_path, model_name="base")

if __name__ == "__main__":
    main()